JAVACC = javacc
JAVA= java
JAVAC = javac

SRC_DIR = src
BIN_DIR = bin

# Flags for javacc
JAVACC_FLAGS = -OUTPUT_DIRECTORY=$(SRC_DIR)/ -LOOKAHEAD=2
JAVA_FLAGS = -cp $(BIN_DIR)

# Source files generated by javacc
SOURCES = $(wildcard $(SRC_DIR)/*.java)

# Compiled files
CLASSES = $(patsubst $(SRC_DIR)/%.java, $(BIN_DIR)/%.class, $(SOURCES))

# Input files
INPUT_FILES = $(wildcard input/*.lug)

BASE_NAME = LugosiParser
GRAMAR_FILE = $(BASE_NAME).jj
INPUT_FILE = teste.lug

all: generate compile run

# Generate the java files from the grammar
generate: $(GRAMAR_FILE)
	$(JAVACC) $(JAVACC_FLAGS) $(GRAMAR_FILE)

# Compile the generated files
$(BIN_DIR)/%.class: $(SRC_DIR)/%.java
	@mkdir -p $(BIN_DIR)
	$(JAVAC) -d $(BIN_DIR) $<

# Compile all the files
compile:
	$(JAVAC) -d $(BIN_DIR) $(SOURCES)

# Run the main class 
run:
	@for file in $(INPUT_FILES); do \
		echo "\nProcessing $$file:"; \
		$(JAVA) $(JAVA_FLAGS) $(BASE_NAME) $$file; \
	done

.PHONY: run
	
# Clean the generated files
clean:
	rm -rf $(SRC_DIR)/*.java $(SRC_DIR)/*.jj $(BIN_DIR)/*.class